
import openai
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
import logging
import os

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
openai.api_key = OPENAI_API_KEY

main_menu = ReplyKeyboardMarkup(
    keyboard=[
        ["üìÇ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ü–ö", "üõ° –£–¥–∞–ª–µ–Ω–∏–µ –≤–∏—Ä—É—Å–æ–≤"],
        ["‚öôÔ∏è –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã", "üß© –ü–æ–¥–±–æ—Ä –∫–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏—Ö"],
        ["‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"]
    ],
    resize_keyboard=True
)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø GPT-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Å —Ä–µ–º–æ–Ω—Ç–æ–º –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π –ü–ö.

"
        "–í—ã–±–µ—Ä–∏ –æ–ø—Ü–∏—é –∏–∑ –º–µ–Ω—é –∏–ª–∏ –∑–∞–¥–∞–π —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å.",
        reply_markup=main_menu
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "/start ‚Äî –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
"
        "/help ‚Äî —Å–ø—Ä–∞–≤–∫–∞
"
        "/about ‚Äî –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ

"
        "–ú–æ–∂–µ—à—å —Ç–∞–∫–∂–µ –≤—ã–±—Ä–∞—Ç—å –≥–æ—Ç–æ–≤—É—é —Ç–µ–º—É –∏–∑ –º–µ–Ω—é –∏–ª–∏ –∑–∞–¥–∞—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –≤—Ä—É—á–Ω—É—é."
    )

async def about_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–Ø Telegram-–±–æ—Ç, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–π –ò–ò ChatGPT, —á—Ç–æ–±—ã –ø–æ–º–æ–≥–∞—Ç—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π, –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ–º –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–≤.
"
        "–°–æ–∑–¥–∞–Ω –ò–¢-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º –¥–ª—è —Ç–∞–∫–∏—Ö –∂–µ –ò–¢-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ü–ö."
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_input = update.message.text

    predefined_prompts = {
        "üìÇ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ü–ö": "–û–ø–∏—à–∏ –ø–æ—à–∞–≥–æ–≤—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –ü–ö –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å –≤–∫–ª—é—á–µ–Ω–∏–µ–º –∏–ª–∏ –∑–∞–≤–∏—Å–∞–Ω–∏—è—Ö.",
        "üõ° –£–¥–∞–ª–µ–Ω–∏–µ –≤–∏—Ä—É—Å–æ–≤": "–ö–∞–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ —É–¥–∞–ª–∏—Ç—å –≤–∏—Ä—É—Å—ã —Å –∫–æ–º–ø—å—é—Ç–µ—Ä–∞, –Ω–µ –ø–æ—Ç–µ—Ä—è–≤ –¥–∞–Ω–Ω—ã–µ?",
        "‚öôÔ∏è –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã": "–î–∞–π —Å–æ–≤–µ—Ç—ã –ø–æ —É—Å–∫–æ—Ä–µ–Ω–∏—é –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ Windows –±–µ–∑ –∞–ø–≥—Ä–µ–π–¥–∞ –∂–µ–ª–µ–∑–∞.",
        "üß© –ü–æ–¥–±–æ—Ä –∫–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏—Ö": "–ü–æ—Å–æ–≤–µ—Ç—É–π –∫–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏–µ –¥–ª—è –±—é–¥–∂–µ—Ç–Ω–æ–≥–æ –∏–≥—Ä–æ–≤–æ–≥–æ –ü–ö –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö 1000$.",
        "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å": "–¢—ã –º–æ–∂–µ—à—å –∑–∞–¥–∞—Ç—å –º–Ω–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –æ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞—Ö, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å!"
    }

    prompt = predefined_prompts.get(user_input, user_input)

    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[{"role": "user", "content": prompt}],
            max_tokens=800
        )
        reply = response['choices'][0]['message']['content']
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ OpenAI API: {e}")
        reply = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ."

    await update.message.reply_text(reply)

def main():
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(CommandHandler("about", about_command))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()
